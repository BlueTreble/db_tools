#!/bin/sh

set -e

if [ $# -ne 2 ]; then
  cat << _EOF_
Renames a sqitch object file as well as all references to it.

Usage:
rename old_pattern new_pattern

old_pattern and new_pattern will be checked against sqitch file names *as well
as* used in a regular expression to rename all references in files.

This means you don't want to include something like "TABLE." in the pattern
(assuming you use a naming scheme of OBJECT_TYPE.schema.object_name for sqitch
patches).
_EOF_
fi

old=$1
new=$2

sqitch_dir=`sqitch config --get core.top_dir`
base_re="s/[[:<:]]$old[[:>:]]/$new/"
base_grep="\<$old\>"
base_file="$sqitch_dir/*/*.$old"

if ! [ -z "`git status --porcelain`" ]; then
  echo 'Untracked changes!'
  echo
  git status
  #exit 1
fi

if [ -z "$sqitch_dir" ]; then
  echo unable to find sqitch top directory
  exit 1
fi

if [ -z "$base_file.sql" ]; then
  echo "No files found matching $base_file.sql"
  exit 2
fi

if [ -z "$base_file@*.sql" ]; then
  echo found tagged files that match $old:
  ls -la $sqitch_dir/*/*.$old@*.sql

  echo Unable to modify tagged files
  exit 2
fi

for f in `ls $base_file.sql`; do
  new_name=`echo $f | sed -e "$base_re"`
  if (echo $new_name | egrep -q $base_grep); then
    echo "something went wrong building new name ($new_name) for $f"
    exit 2
  fi

  git mv $f $new_name
done

files=`git grep -l -E "$base_grep"`
if [ -z "$files" ]; then
  echo "WARNING! No files found with pattern $base_grep"
else
  sed -Ee "${base_re}g" -i '' $files
  git add $files
  git status
fi


# vi: expandtab ts=2 sw=2
